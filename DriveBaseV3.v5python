{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\r\nfrom vex import *\r\nimport urandom\r\n\r\n# Brain should be defined by default\r\nbrain=Brain()\r\n\r\n# Robot configuration code\r\ncontroller_1 = Controller(PRIMARY)\r\ndigital_out_a = DigitalOut(brain.three_wire_port.a)\r\ndigital_out_b = DigitalOut(brain.three_wire_port.b)\r\n\r\n\r\n# wait for rotation sensor to fully initialize\r\nwait(30, MSEC)\r\n\r\n\r\n# Make random actually random\r\ndef initializeRandomSeed():\r\n    wait(100, MSEC)\r\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\r\n    urandom.seed(int(random))\r\n      \r\n# Set random seed \r\ninitializeRandomSeed()\r\n\r\n\r\ndef play_vexcode_sound(sound_name):\r\n    # Helper to make playing sounds from the V5 in VEXcode easier and\r\n    # keeps the code cleaner by making it clear what is happening.\r\n    print(\"VEXPlaySound:\" + sound_name)\r\n    wait(5, MSEC)\r\n\r\n# add a small delay to make sure we don't print in the middle of the REPL header\r\nwait(200, MSEC)\r\n# clear the console to make sure we don't have the REPL in the console\r\nprint(\"\\033[2J\")\r\n\r\n#endregion VEXcode Generated Robot Configuration\r\nmotorRightA = Motor(Ports.PORT13, GearSetting.RATIO_18_1, True)\r\nmotorRightB = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\r\nmotorRightC = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\r\nmotorRightGroup = MotorGroup(motorRightA, motorRightB, motorRightC)\r\n\r\nmotorLeftA = Motor(Ports.PORT11, GearSetting.RATIO_18_1, True)\r\nmotorLeftB = Motor(Ports.PORT12, GearSetting.RATIO_18_1, True)\r\nmotorLeftC = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\r\nmotorLeftGroup = MotorGroup(motorLeftA, motorLeftB, motorLeftC)\r\n\r\nmotorConveyer = Motor(Ports.PORT15, GearSetting.RATIO_18_1, True)\r\nisOpenPneumatic1 = False\r\n\r\ndrivetrain = DriveTrain(motorLeftGroup, motorRightGroup)\r\n\r\ndef pneumaticPush():\r\n    if(isOpenPneumatic1 == False):\r\n        digital_out_a.set(True)\r\n        digital_out_b.set(True)\r\n        isOpenPneumatic1 = True\r\n    elif(isOpenPneumatic1 == True):\r\n        digital_out_a.set(False)\r\n        digital_out_b.set(False)\r\n        isOpenPneumatic1 = False\r\n\r\ndef motorConveyerFunction():\r\n    if(controller_1.buttonL1.pressing()):\r\n        motorConveyer.set_velocity(50)\r\n    elif(controller_1.buttonL2.pressing()):\r\n        motorConveyer.set_velocity(-50)\r\n\r\ndef tankDrive():\r\n    motorLeftGroup.set_velocity(controller_1.axis3.position(), PERCENT)\r\n    motorRightGroup.set_velocity(controller_1.axis2.position(), PERCENT)\r\n    motorLeftGroup.spin(FORWARD)\r\n    motorRightGroup.spin(FORWARD)\r\n\r\nwhile True:\r\n    tankDrive()\r\n    motorConveyerFunction()\r\n    controller_1.buttonA.pressed(pneumaticPush)\r\n    wait(5, MSEC)","textLanguage":"python","robotConfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"digital_out_a","customName":false,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[2],"name":"digital_out_b","customName":false,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}